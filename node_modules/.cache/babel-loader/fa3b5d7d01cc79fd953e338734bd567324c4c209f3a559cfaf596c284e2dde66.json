{"ast":null,"code":"var _jsxFileName = \"/Users/patricktobias/Documents/react-form-with-formik-and-yup/src/Components/Form/Organism/RegistrationForm.js\";\nimport { Form, Formik } from \"formik\";\nimport PersonalDataForm from \"../Molecules/PersonalDataForm\";\nimport AddressForm from \"../Molecules/AddressForm\";\nimport RegisterForm from \"../Molecules/RegisterForm\";\nimport DataFormValidation from \"../../../js/DataFormValidation\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RegistrationForm = () => {\n  const combinedSchema = DataFormValidation.personalDataFormValidation().concat(DataFormValidation.addressFormValidation()).concat(DataFormValidation.registerFormValidation());\n  const addAddressForm = formik => {\n    let newAddress = {\n      residencyType: '',\n      addressType: '',\n      cep: '',\n      address: '',\n      number: '',\n      extension: '',\n      city: '',\n      state: '',\n      country: ''\n    };\n    formik.setValues({\n      ...formik.values,\n      address: [...formik.values.address, newAddress]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Cadastre-se agora mesmo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        fullName: '',\n        gender: '',\n        birthdate: '',\n        cpf: '',\n        telephone: '',\n        address: [{\n          residencyType: '',\n          addressType: '',\n          cep: '',\n          number: '',\n          address: '',\n          extension: '',\n          city: '',\n          state: '',\n          country: ''\n        }],\n        email: '',\n        password: '',\n        passwordConfirmation: ''\n      },\n      validationSchema: combinedSchema,\n      onSubmit: values => {\n        alert(\"Formulário válido!\");\n      },\n      children: formik => {\n        return /*#__PURE__*/_jsxDEV(Form, {\n          className: \"needs-validation\",\n          noValidate: true,\n          children: [/*#__PURE__*/_jsxDEV(PersonalDataForm, {\n            formik: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 29\n          }, this), formik.values.address.map((address, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: /*#__PURE__*/_jsxDEV(AddressForm, {\n              formik: formik,\n              index: index\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-start my-2 py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-secondary\",\n              type: \"button\",\n              onClick: () => addAddressForm(formik),\n              children: \"Adicionar novo Endere\\xE7o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n            formik: formik\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary w-100\",\n              type: \"submit\",\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_c = RegistrationForm;\nexport default RegistrationForm;\nvar _c;\n$RefreshReg$(_c, \"RegistrationForm\");","map":{"version":3,"names":["Form","Formik","PersonalDataForm","AddressForm","RegisterForm","DataFormValidation","React","jsxDEV","_jsxDEV","Fragment","_Fragment","RegistrationForm","combinedSchema","personalDataFormValidation","concat","addressFormValidation","registerFormValidation","addAddressForm","formik","newAddress","residencyType","addressType","cep","address","number","extension","city","state","country","setValues","values","children","className","fileName","_jsxFileName","lineNumber","columnNumber","initialValues","fullName","gender","birthdate","cpf","telephone","email","password","passwordConfirmation","validationSchema","onSubmit","alert","noValidate","map","index","type","onClick","_c","$RefreshReg$"],"sources":["/Users/patricktobias/Documents/react-form-with-formik-and-yup/src/Components/Form/Organism/RegistrationForm.js"],"sourcesContent":["import { Form, Formik } from \"formik\";\n\nimport PersonalDataForm from \"../Molecules/PersonalDataForm\";\nimport AddressForm from \"../Molecules/AddressForm\";\nimport RegisterForm from \"../Molecules/RegisterForm\";\nimport DataFormValidation from \"../../../js/DataFormValidation\";\nimport React from \"react\";\n\nconst RegistrationForm = () => {\n    const combinedSchema = DataFormValidation.personalDataFormValidation()\n        .concat(DataFormValidation.addressFormValidation())\n        .concat(DataFormValidation.registerFormValidation());\n\n    const addAddressForm = (formik) => {\n        let newAddress = {\n            residencyType: '',\n            addressType: '',\n            cep: '',\n            address: '',\n            number: '',\n            extension: '',\n            city: '',\n            state: '',\n            country: ''\n        }\n        formik.setValues({\n            ...formik.values,\n            address:[...formik.values.address, newAddress]\n        });\n    };\n\n    return (\n        <>\n            <h1 className='text-center'>Cadastre-se agora mesmo</h1>\n            <Formik\n                initialValues={{\n                    fullName: '',\n                    gender: '',\n                    birthdate: '',\n                    cpf: '',\n                    telephone: '',\n\n                    address: [{\n                        residencyType: '',\n                        addressType: '',\n                        cep: '',\n                        number: '',\n                        address: '',\n                        extension: '',\n                        city: '',\n                        state: '',\n                        country: '',\n                    }],\n\n                    email: '',\n                    password: '',\n                    passwordConfirmation: ''\n                }}\n\n                validationSchema={combinedSchema}\n\n                onSubmit={values => {\n                    alert(\"Formulário válido!\")\n                }}\n            >\n                {formik => {\n                    return (\n                        <Form className='needs-validation' noValidate>\n                            <PersonalDataForm\n                                formik={formik}\n                            />\n                            {formik.values.address.map((address, index) => (\n                                <React.Fragment key={index}>\n                                    <AddressForm\n                                        formik={formik}\n                                        index={index}\n                                    />\n                                </React.Fragment>\n                            ))}\n                            <div className=\"text-start my-2 py-2\">\n                                <button className=\"btn btn-secondary\" type='button' onClick={() => addAddressForm(formik)}>Adicionar novo Endereço</button>\n                            </div>\n\n                            <RegisterForm\n                                formik={formik}\n                            />\n                            <div className=\"text-center\">\n                                <button className=\"btn btn-primary w-100\" type='submit'>Cadastrar</button>\n                            </div>\n                        </Form>\n                    )\n                }}\n            </Formik >\n        </>\n    )\n}\n\nexport default RegistrationForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}